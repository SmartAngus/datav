"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.build = void 0;
var path_1 = __importDefault(require("path"));
var avenger_shared_1 = require("@osdoc-dev/avenger-shared");
var avenger_config_1 = require("@osdoc-dev/avenger-config");
var avenger_utils_1 = require("@osdoc-dev/avenger-utils");
var register_babel_1 = __importDefault(require("./register-babel"));
var rollup_1 = require("./rollup");
var build = function (opt) {
    var cwd = opt.cwd, _a = opt.watch, watch = _a === void 0 ? true : _a;
    register_babel_1.default({ cwd: cwd, only: avenger_shared_1.CLI_CONFIG_FILES });
    var buildConfig = avenger_config_1.getBundleOpts(opt);
    avenger_utils_1.rimraf.sync(path_1.default.join(cwd, 'dist'));
    var _b = buildConfig, esm = _b.esm, entry = _b.entry, cjs = _b.cjs, umd = _b.umd;
    if (esm) {
        var esmOpt = esm;
        if (esmOpt.type === avenger_shared_1.BundleTypeMap.rollup)
            rollup_1.rollupBuild({ cwd: cwd, type: avenger_shared_1.BundleOutTypeMap.esm, entry: entry, watch: watch, buildConfig: buildConfig });
    }
    if (cjs) {
        var cjsOpt = cjs;
        if (cjsOpt.type === avenger_shared_1.BundleTypeMap.rollup)
            rollup_1.rollupBuild({ cwd: cwd, type: avenger_shared_1.BundleOutTypeMap.cjs, entry: entry, watch: watch, buildConfig: buildConfig });
    }
    if (umd)
        rollup_1.rollupBuild({ cwd: cwd, type: avenger_shared_1.BundleOutTypeMap.umd, entry: entry, watch: watch, buildConfig: buildConfig });
};
exports.build = build;
//# sourceMappingURL=build.js.map